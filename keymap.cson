'body':
  'ctrl-tab ^ctrl': 'unset!'
  'ctrl-tab': 'pane:show-next-item'
  'ctrl-shift-tab ^ctrl': 'unset!'
  'ctrl-shift-tab': 'pane:show-previous-item'
  'ctrl-f': 'unset!'
  'ctrl-p': 'unset!'
  'ctrl-b': 'unset!'
  'ctrl-n': 'unset!'

'.platform-darwin, .platform-darwin .command-palette atom-text-editor':
  'shift-cmd-P': 'unset!'
  'shift-ctrl-P': 'command-palette:toggle'

'.platform-darwin atom-text-editor:not([mini])':
  'ctrl-cmd-e': 'emmet:expand-abbreviation'
  'shift-cmd-D': 'unset!'
  'ctrl-shift-D': 'editor:duplicate-lines'

'.platform-darwin atom-workspace':
  'alt-cmd-o': 'unset!'
  'ctrl-cmd-o': 'advanced-open-file:toggle'

'.platform-darwin':
  'ctrl-\\': 'tree-view:toggle-focus'

'atom-workspace':
  'ctrl-alt-o': 'unset'
  'ctrl-cmd-b': 'browser-plus:open'
  'cmd-@': 'platformio-ide-terminal:new'
  'cmd-`': 'platformio-ide-terminal:toggle'

'atom-text-editor':
  'ctrl-cmd-]': 'editor:auto-indent'
  'ctrl-alt-b': 'unset!'
  'ctrl-cmd-b': 'atom-beautify:beautify-editor'
  'ctrl-l': 'editor:select-line'

# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#customizing-keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on macOS and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#configuring-with-cson
